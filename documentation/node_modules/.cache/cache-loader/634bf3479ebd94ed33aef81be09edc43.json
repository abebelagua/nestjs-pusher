{"remainingRequest":"/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/babel-loader/lib/index.js??ref--13-1!/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/@docusaurus/mdx-loader/src/index.js??ref--13-2!/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--13-3!/Users/rodrigo/Documents/nestjs-pusher/documentation/docs/socket-id-decorator.md","dependencies":[{"path":"/Users/rodrigo/Documents/nestjs-pusher/documentation/docs/socket-id-decorator.md","mtime":1612650836178},{"path":"/Users/rodrigo/Documents/nestjs-pusher/documentation/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-socket-id-decorator-md-e9a.json","mtime":1612652217864},{"path":"/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/cache-loader/dist/cjs.js","mtime":1612647164893},{"path":"/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/babel-loader/lib/index.js","mtime":1612647164882},{"path":"/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1612647169217},{"path":"/Users/rodrigo/Documents/nestjs-pusher/documentation/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1612647169034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3JvZHJpZ28vRG9jdW1lbnRzL25lc3Rqcy1wdXNoZXIvZG9jdW1lbnRhdGlvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidzb2NrZXQtaWQtZGVjb3JhdG9yJyx0aXRsZTonU29ja2V0IElkIERlY29yYXRvcid9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJzb2NrZXQtaWQtZGVjb3JhdG9yIiwiaWQiOiJzb2NrZXQtaWQtZGVjb3JhdG9yIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IlNvY2tldCBJZCBEZWNvcmF0b3IiLCJkZXNjcmlwdGlvbiI6IlNvY2tldCBJZCBEZWNvcmF0b3IiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3NvY2tldC1pZC1kZWNvcmF0b3IubWQiLCJzbHVnIjoiL3NvY2tldC1pZC1kZWNvcmF0b3IiLCJwZXJtYWxpbmsiOiIvbmVzdGpzLXB1c2hlci9kb2NzL3NvY2tldC1pZC1kZWNvcmF0b3IiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL3NvY2tldC1pZC1kZWNvcmF0b3IubWQiLCJ2ZXJzaW9uIjoiY3VycmVudCIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiU2VuZCBHdWFyZCBEZWNvcmF0b3IiLCJwZXJtYWxpbmsiOiIvbmVzdGpzLXB1c2hlci9kb2NzL3NlbmQtZ3VhcmQtZGVjb3JhdG9yIn19Oy8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi8gLyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgdG9jPVt7dmFsdWU6J1NvY2tldCBJZCBEZWNvcmF0b3InLGlkOidzb2NrZXQtaWQtZGVjb3JhdG9yJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidIZWFkZXIgbmFtZSAoZGVmYXVsdCA9IHgtcHVzaGVyLXNpZCknLGlkOidoZWFkZXItbmFtZS1kZWZhdWx0LS14LXB1c2hlci1zaWQnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0ZhY3RvcnknLGlkOidmYWN0b3J5JyxjaGlsZHJlbjpbXX1dO2NvbnN0IGxheW91dFByb3BzPXt0b2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDIiLHsiaWQiOiJzb2NrZXQtaWQtZGVjb3JhdG9yIn0sYFNvY2tldCBJZCBEZWNvcmF0b3JgKSxtZHgoInAiLG51bGwsYFRoaXMgZGVjb3JhdG9yIGlzIG5lZWRlZCB3aGVuIHlvdSB3YW50IHRvIHNwZWNpZml5IHdoZXJlIG5lc3Rqcy1wdXNoZXIgc2hvdWxkIGZldGNoIHlvdXIgc29ja2V0IGlkIHRvIGV4Y2x1ZGUKZnJvbSBldmVudHMuIFlvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHNvY2tldCBpZCBpbiBgLG1keCgiYSIse3BhcmVudE5hbWU6InAiLCJocmVmIjoiaHR0cHM6Ly9wdXNoZXIuY29tL2RvY3MvY2hhbm5lbHMvc2VydmVyX2FwaS9leGNsdWRpbmctZXZlbnQtcmVjaXBpZW50cyJ9LGBodHRwczovL3B1c2hlci5jb20vZG9jcy9jaGFubmVscy9zZXJ2ZXJfYXBpL2V4Y2x1ZGluZy1ldmVudC1yZWNpcGllbnRzYCkpLG1keCgiaDIiLHsiaWQiOiJoZWFkZXItbmFtZS1kZWZhdWx0LS14LXB1c2hlci1zaWQifSxgSGVhZGVyIG5hbWUgKGRlZmF1bHQgPSB4LXB1c2hlci1zaWQpYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIix7cGFyZW50TmFtZToicHJlIiwiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHlwZXNjcmlwdCJ9LGBpbXBvcnQgeyBDb250cm9sbGVyLCBHZXQgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7CmltcG9ydCB7IFB1c2hlckNoYW5uZWwsIFB1c2hlclNvY2tldElkIH0gZnJvbSAnbmVzdGpzLXB1c2hlcic7CgoKQENvbnRyb2xsZXIoJ2NhdHMnKQpleHBvcnQgY2xhc3MgQ2F0c0NvbnRyb2xsZXIgewogIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgY2F0U2VydmljZTogQ2F0U2VydmljZSkgewogICAgLy9JbWFnaW5hcnkgc2VydmljZSBmb3IgdGhlIHNha2Ugb2YgdGhlIGV4YW1wbGUKICB9CgogIEBQdXNoZXJTb2NrZXRJZCgnY2xpZW50LXNvY2tldC1pZCcpCiAgQFB1c2hlckNoYW5uZWwoJ3ByaXZhdGUtY2hhbm5lbC1vZi1jYXRzJykKICBAUHVzaGVyRXZlbnQoJ2NhdC5jcmVhdGVkJykKICBAUG9zdCgpCiAgYXN5bmMgY3JlYXRlQ2F0KEBCb2R5KCkgZHRvKTogc3RyaW5nIHsKICAgIGNvbnN0IG5ld0NhdCA9IGF3YWl0IHRoaXMuY2F0U2VydmljZS5jcmVhdGUoZHRvKQogICAgLy9UaGUgcmV0dXJuIHZhbHVlIHdpbGwgYmUgdXNlZCBhcyB0aGUgY29udGVudAogICAgcmV0dXJuIG5ld0NhdAogIH0KfQpgKSksbWR4KCJoMiIseyJpZCI6ImZhY3RvcnkifSxgRmFjdG9yeWApLG1keCgicCIsbnVsbCxgSW4gdGhpcyBleGFtcGxlIHdlJ2xsIGJlIHJlYWRpbmcgZnJvbSB0aGUgYm9keSBvZiB0aGUgcmVxdWVzdCBpbiBhIGZpZWxkIG5hbWVkICJzb2NrZXRJZCIgYnV0CnlvdSBjYW4gcmVhZCBmcm9tIGFueXdoZXJlIGluIHRoZSByZXF1ZXN0ICh0eXBpY2FsbHkgaXRzIGFkdmlzYWJsZSB0byBjb21lIGluIGEgY3VzdG9tIGhlYWRlcilgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUiLCJjbGFzc05hbWUiOiJsYW5ndWFnZS10eXBlc2NyaXB0In0sYGltcG9ydCB7IENvbnRyb2xsZXIsIEdldCB9IGZyb20gJ0BuZXN0anMvY29tbW9uJzsKaW1wb3J0IHsgUHVzaGVyQ2hhbm5lbCwgUHVzaGVyU29ja2V0SWQgfSBmcm9tICduZXN0anMtcHVzaGVyJzsKCmNvbnN0IHNpZEZhY3RvcnkgPSAocmVxOiBhbnkpID0+IHsKICByZXR1cm4gcmVxLmJvZHkuc29ja2V0SWQKfQoKQENvbnRyb2xsZXIoJ2NhdHMnKQpleHBvcnQgY2xhc3MgQ2F0c0NvbnRyb2xsZXIgewogIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgY2F0U2VydmljZTogQ2F0U2VydmljZSkgewogICAgLy9JbWFnaW5hcnkgc2VydmljZSBmb3IgdGhlIHNha2Ugb2YgdGhlIGV4YW1wbGUKICB9CgogIEBQdXNoZXJTb2NrZXRJZChzaWRGYWN0b3J5KQogIEBQdXNoZXJDaGFubmVsKCdwcml2YXRlLWNoYW5uZWwtb2YtY2F0cycpCiAgQFB1c2hlckV2ZW50KCdjYXQuY3JlYXRlZCcpCiAgQFBvc3QoKQogIGFzeW5jIGNyZWF0ZUNhdChAQm9keSgpIGR0byk6IHN0cmluZyB7CiAgICBjb25zdCBuZXdDYXQgPSBhd2FpdCB0aGlzLmNhdFNlcnZpY2UuY3JlYXRlKGR0bykKICAgIC8vVGhlIHJldHVybiB2YWx1ZSB3aWxsIGJlIHVzZWQgYXMgdGhlIGNvbnRlbnQKICAgIHJldHVybiBuZXdDYXQKICB9Cn0KYCkpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}